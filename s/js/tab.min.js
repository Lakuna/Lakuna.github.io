const openTab=(e,t)=>{if(e.content.querySelector(`:scope > div#${t}`)){const o=e.content.querySelectorAll(`:scope > div.${TAB_ITEM_CLASS}`),n=e.controller.querySelectorAll(`:scope > button.${TAB_CONTROL_ITEM_CLASS}`);for(let e=0;e<o.length;e++){const n=o[e];n.classList.remove(ACTIVE_CLASS),n.id==t&&n.classList.add(ACTIVE_CLASS)}for(let e=0;e<n.length;e++){const o=n[e];o.classList.remove(ACTIVE_CLASS),o.linkedId==t&&o.classList.add(ACTIVE_CLASS)}}else console.warn(`Tab content "${t}" not found.`)},tabs=document.querySelectorAll(`div.${TAB_CLASS}`);for(let e=0;e<tabs.length;e++){const t=tabs[e];t.content=t.querySelector(`:scope > div.${TAB_CONTENT_CLASS}`),t.content||(console.log("Adding tab content container."),t.content=document.createElement("div"),t.content.className=TAB_CONTENT_CLASS,t.append(t.content)),t.controller=t.querySelector(`:scope > div.${TAB_CONTROLLER_CLASS}`),t.controller||(console.log("Adding tab button container."),t.controller=document.createElement("div"),t.controller.className=TAB_CONTROLLER_CLASS,t.prepend(t.controller));const o=t.querySelectorAll(":scope > div");for(let e=0;e<o.length;e++){const n=o[e];n!=t.controller&&n!=t.content&&(console.log("Moving div into tab content."),t.content.append(n))}const n=t.content.querySelectorAll(":scope > div");for(let e=0;e<n.length;e++){const t=n[e];t.classList.contains(TAB_ITEM_CLASS)||(console.log("Adding tab content class to tab content."),t.classList.add(TAB_ITEM_CLASS))}const c=t.content.querySelectorAll(`:scope > div.${TAB_ITEM_CLASS}`);for(let e=0;e<c.length;e++){const o=c[e];let n="";if(o.id)n=o.id;else{console.warn("Tab content lacks an ID. Assigning a placeholder.");let e=1;for(n=`Tab_${e}`;document.getElementById(n);)n=`Tab_${++e}`;o.id=n}const l=document.createElement("button");l.className=TAB_CONTROL_ITEM_CLASS,l.onclick=(()=>openTab(t,n)),l.linkedId=n,l.innerHTML=n.replace(/_/g," "),t.controller.append(l)}const l=[];for(let e=0;e<t.children.length;e++){const o=t.children[e];o!=t.content&&o!=t.controller&&l.push(o)}l.forEach(e=>{console.warn("Removing extaneous node from tab."),t.removeChild(e)});const s=new URLSearchParams(location.search).get("tab");s&&openTab(t,s)}