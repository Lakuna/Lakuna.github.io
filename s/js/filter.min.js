const toggleFilter=(e,t,l)=>{e.activeClasses.includes(t)?e.activeClasses.splice(e.activeClasses.indexOf(t),1):e.activeClasses.push(t);const o=e.controller.querySelectorAll(`button.${FILTER_CONTROL_ITEM_CLASS}`),n=e.content.querySelectorAll(`div.${FILTER_ITEM_CLASS}`);for(let t=0;t<o.length;t++){const l=o[t];l.classList.remove(ACTIVE_CLASS),e.activeClasses.includes(l.linkedClassName)&&l.classList.add(ACTIVE_CLASS)}for(let t=0;t<n.length;t++){const l=n[t];l.classList.remove(ACTIVE_CLASS),e.activeClasses.every(e=>l.classList.contains(e)||e==FILTER_ITEM_CLASS)&&l.classList.add(ACTIVE_CLASS)}},filters=document.querySelectorAll(`div.${FILTER_CLASS}`);for(let e=0;e<filters.length;e++){const t=filters[e];t.activeClasses=[],t.content=t.querySelector(`:scope > div.${FILTER_CONTENT_CLASS}`),t.content||(console.log("Adding filter content."),t.content=document.createElement("div"),t.content.className=FILTER_CONTENT_CLASS,t.append(t.content)),t.controller=t.querySelector(`:scope > div.${FILTER_CONTROLLER_CLASS}`),t.controller||(console.log("Adding filter controller."),t.controller=document.createElement("div"),t.controller.className=FILTER_CONTROLLER_CLASS,t.prepend(t.controller));const l=t.querySelectorAll(":scope > div");for(let e=0;e<l.length;e++){const o=l[e];o!=t.controller&&o!=t.content&&(console.log("Moving div into filter content."),t.content.append(o))}const o=t.content.querySelectorAll(":scope > div");for(let e=0;e<o.length;e++){const t=o[e];t.classList.contains(FILTER_ITEM_CLASS)||(console.log("Adding item class to filter div."),t.classList.add(FILTER_ITEM_CLASS))}const n=[],s=t.content.querySelectorAll(`:scope > div.${FILTER_ITEM_CLASS}`);for(let e=0;e<s.length;e++)s[e].classList.forEach(e=>{e!=FILTER_ITEM_CLASS&&(n.includes(e)||n.push(e))});console.log(`Found filter class names: ${n}`);for(let e=0;e<n.length;e++){const l=n[e],o=document.createElement("button");o.className=FILTER_CONTROL_ITEM_CLASS,o.onclick=(()=>toggleFilter(t,l)),o.linkedClassName=l,o.innerHTML=l.replace(/_/g," "),t.controller.append(o)}const c=[];for(let e=0;e<t.children.length;e++){const l=t.children[e];l!=t.content&&l!=t.controller&&c.push(l)}c.forEach(e=>{console.warn("Removing extaneous node from filter."),t.removeChild(e)});const r=new URLSearchParams(location.search).get("filter");r?toggleFilter(t,r):(toggleFilter(t),toggleFilter(t))}